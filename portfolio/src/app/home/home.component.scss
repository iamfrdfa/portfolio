@use 'styles/variables' as *;
@use 'styles/mixins' as *;
@use "sass:color";
// ggf. @use "sass:meta"; falls man meta.* nutzt

$marqueeBackground: #383838d3;
$accentGreen: #3dcfb6 !default;

a,
button {
    cursor: pointer !important;
}

/* ---------- HERO ---------- */

.hero {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: clamp(48px, 8vh, 120px) 0 clamp(40px, 6vh, 100px) 0;
    overflow: visible;

    /* Hero-Inhalte auf gleiche X-Flucht wie andere Komponenten */
    width: min(var(--container-max), 100% - 2 * var(--gutter));
    margin-inline: auto;
}

.hero_subtitle {
    font-size: clamp(18px, 4.2vw, 32px);
    font-weight: 100;
    margin-block: 0;
}

.hero_title {
    font-size: clamp(38px, 8vw, 100px);
    margin-block: 0;
}

.heroButtonsWrapper {
    @include buttonsWrapper;
    gap: clamp(10px, 2vw, 16px);
}

/* ---------- Buttons mit nahtlosem Hover-Marquee ---------- */
.heroButton_work,
.heroButton_contact {
    @include buttonStyle160px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    position: relative;
    overflow: hidden;
    isolation: isolate;

    /* Marquee-Setup */
    --btnMarqueeGap: clamp(1.25rem, 2.2vw, 2.5rem);
    --btnMarqueeSpeed: 2.75s;

    .btn-scroll {
        display: inline-flex;
        align-items: center;
        white-space: nowrap;
        gap: var(--btnMarqueeGap);
        transform: translateX(0);
        will-change: transform;
        padding-inline-end: 0;
    }

    .btn-scroll > span[aria-hidden="true"] { display: none; }

    &:hover .btn-scroll > span[aria-hidden="true"],
    &:focus-visible .btn-scroll > span[aria-hidden="true"] { display: inline-block; }

    &:hover .btn-scroll,
    &:focus-visible .btn-scroll {
        padding-inline-end: var(--btnMarqueeGap);
        animation: btnMarquee var(--btnMarqueeSpeed) linear infinite;
    }
}

/* Nur bis -50% animieren → 100% Frame entspricht 0% (nahtlos) */
@keyframes btnMarquee {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
}

/* ---------- Gimmicks: Seitenleisten & Marquee ---------- */
.gimmick {
    position: relative;
    /* Auf gleiches Alignment-System wie andere Komponenten */
    width: min(var(--container-max), 100% - 2 * var(--gutter));
    margin: clamp(24px, 5vh, 40px) auto 0;
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: end;
    gap: clamp(16px, 4vw, 40px);
    overflow: visible;
}

/* Gemeinsame Styles für linke/rechte Säule */
.gimmick_left,
.gimmick_right {
    display: grid;
    justify-items: center;
    align-content: end;
    gap: 12px;
    pointer-events: none;
}

/* Seitlicher Offset für die beiden Säulen */
.gimmick {
    --sideOffset: 150px; /* gewünschte 150px nach außen */
}

/* ganze linke/rechte Säule gemeinsam verschieben */
.gimmick_left {
    transform: translateX(calc(-1 * var(--sideOffset)));
}
.gimmick_right {
    transform: translateX(var(--sideOffset));
}

/* Responsiv anpassen (damit’s nicht abgeschnitten wirkt) */
@media (max-width: 1200px) {
    .gimmick { --sideOffset: 100px; }
}
@media (max-width: 992px) {
    .gimmick { --sideOffset: 60px; }
}
@media (max-width: 768px) {
    /* auf kleineren Screens kein Außenversatz, weil die Säulen stacken */
    .gimmick { --sideOffset: 0px; }
}

/* Basis-Höhe als Variable, dann pro Seite versetzen */
.gimmick {
    --vertBase: clamp(110px, 18vw, 220px);
}

.gimmick_left .vertBar {
    height: calc(var(--vertBase) + 100px);  /* links +100px */
}

.gimmick_right .vertBar {
    height: calc(max(0px, var(--vertBase) - 40px)); /* rechts -40px, nicht unter 0 */
}

/* Events in der rechten Säule wieder zulassen */
.gimmick_right .vEmail,
.gimmick_right .iconStack {
    pointer-events: auto;
}

/* Vertikale E-Mail: bottom → top lesen + Hover-Effekte */
.vEmail {
    display: inline-block;
    writing-mode: vertical-rl;
    text-orientation: mixed;

    /* Leserichtung umkehren, ohne Hover-Invert */
    transform: rotate(180deg);
    transform-origin: center;

    color: white;
    text-decoration: none;
    font-size: clamp(12px, 1.6vw, 18px);
    letter-spacing: .08em;
    opacity: .9;

    /* weiche Transition – inkl. transform, damit Scale/Translate smooth sind */
    transition:
        opacity .2s ease,
        color .2s ease,
        transform .2s ease;

    /* HOVER / FOCUS: größer wirken, leicht anheben, Farb-Boost */
    &:hover,
    &:focus-visible {
        opacity: 1;
        //color: lighten($primaryColor, 10%);
        color: color.adjust($primaryColor, $lightness: 10%);
        /* Rotation beibehalten und Effekte additiv kombinieren */
        transform: rotate(180deg) translateY(2px) scale(1.06);
    }
}

.iconStack {
    pointer-events: auto;
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: 8px;

    .iconBtn {
        display: grid;
        place-items: center;
        width: clamp(32px, 4.5vw, 40px);
        height: clamp(32px, 4.5vw, 40px);
        border: 1px solid rgba($accentGreen, 0.55);
        border-radius: 999px;
        color: $accentGreen;
        background: transparent;
        transition: transform .18s ease, box-shadow .18s ease, background-color .18s ease;

        &:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 14px rgba($accentGreen, 0.28);
            background-color: rgba($accentGreen, 0.08);
        }

        &:focus-visible {
            outline: 2px solid $accentGreen;
            outline-offset: 2px;
        }
    }
}

/* Ovale Pill 30×48 */
.nudgePill {
    width: 30px;
    height: 48px;
    border-radius: 9999px;
    border: 1px solid rgba($accentGreen, 0.55);
    background: transparent;
    display: grid;
    place-items: center;
    box-shadow: 0 2px 10px rgba($accentGreen, 0.12);
}

/* sorgt für die sanfte Y-Bewegung ohne Sprung am Loop */
.nudgeMotion {
    will-change: transform;
    animation: floatY 1s linear infinite; /* linear + 0%==100% → nahtlos */
}

/* Das Glyph (der eigentliche Pfeil) */
.nudgeGlyph {
    display: inline-block;
    color: #fff;              /* weiß, wie gewünscht */
    font-size: 18px;          /* passt gut in 30×48; nach Geschmack anpassen */
    line-height: 1;           /* keine zusätzlichen Zeilenabstände */
    transform: translateZ(0); /* glatter auf manchen GPUs */
    user-select: none;
    -webkit-user-select: none;
}

/* sanfte Bounce-Loop – Start/Ende identisch → kein „Stocken“ */
@keyframes floatY {
    0%   { transform: translateY(0); }
    20%  { transform: translateY(2px); }
    40%  { transform: translateY(6px); }  /* tiefster Punkt */
    60%  { transform: translateY(2px); }
    80%  { transform: translateY(0); }
    100% { transform: translateY(0); }    /* identisch zu 0% */
}

/* Optional: leicht diagonal wie im Video
.nudgePill { transform: rotate(-6deg); }
*/

/* Barrierefreiheit */
@media (prefers-reduced-motion: reduce) {
    .nudgeMotion { animation: none !important; transform: none !important; }
}


/* Vertikale grüne Linie */
.vertBar {
    width: 2px;
    height: clamp(110px, 18vw, 220px);
    background: linear-gradient(
            to bottom,
            rgba($accentGreen, 0) 0%,
            rgba($accentGreen, 0.8) 15%,
            $accentGreen 50%,
            rgba($accentGreen, 0.8) 85%,
            rgba($accentGreen, 0) 100%
    );
    border-radius: 2px;
}

/* ---------- Marquee Mitte (als Overlay) ---------- */
.gimmick_center {
    position: relative;
    height: 0;
    min-width: 0;
    pointer-events: none;
}

.marquee {
    --speed: 30s;

    padding: 10px 0;
    height: clamp(34px, 4.5vw, 40px);

    display: block;

    position: absolute;
    z-index: 999;
    left: 50%;
    transform: translateX(-50%);
    top: clamp(-180px, -28vw, -300px);
    rotate: -6deg;

    width: min(100vw, 1600px);
    max-width: 95vw;
    overflow: hidden;
    pointer-events: auto;

    font-size: clamp(18px, 4.5vw, 32px);
    color: $primaryColor;

    mask-image: linear-gradient(
            to right, rgba(0,0,0,0) 0%, rgba(0,0,0,1) 10%, rgba(0,0,0,1) 90%, rgba(0,0,0,0) 100%
    );
    -webkit-mask-image: -webkit-linear-gradient(
            to right, rgba(0,0,0,0) 0%, rgba(0,0,0,1) 10%, rgba(0,0,0,1) 90%, rgba(0,0,0,0) 100%
    );

    border: none;
    border-radius: 999px;
    background: $marqueeBackground;
}

/* Hover: Geschwindigkeit runter auf 60s (Variante A) */
.marquee:hover,
.marquee:focus-visible { --speed: 60s; }

/* Track */
.marquee__inner {
    display: flex;
    align-items: center;
    flex-wrap: nowrap;
    white-space: nowrap;
    gap: clamp(10px, 2.2vw, 18px);
    width: max-content;
    will-change: transform;

    animation-name: marqueeX;
    animation-duration: var(--speed);
    animation-timing-function: linear;
    animation-iteration-count: infinite;

    padding-inline: 0;
}

.marquee__item,
.marquee__sep { flex: 0 0 auto; }

@keyframes marqueeX {
    0%   { transform: translateX(0); }
    100% { transform: translateX(-50%); }
}

.marquee__item { font-weight: 500; letter-spacing: .2px; line-height: 1; }
.marquee__sep  { opacity: .5; }

/* Bewegungen respektieren Systemeinstellung */
@media (prefers-reduced-motion: reduce) {
    .heroButton_work .btn-scroll,
    .heroButton_contact .btn-scroll,
    .marquee__inner {
        animation: none !important;
        transform: none !important;
    }
}

/* ---------- Sektionen darunter ---------- */
#aboutMeComponent,
#skillComponent,
#projects,
#valuationComponent,
#contactFormComponent {
    width: 100%;
    background-color: $secondaryColorBG;
}

/* =======================
   RESPONSIVE BREAKPOINTS
   ======================= */

/* <= 1200px: etwas kompakter */
@media (max-width: 1200px) {
    .gimmick { gap: 28px; }
}

/* <= 992px: Gimmicks enger, Marquee etwas näher an die Hero */
@media (max-width: 992px) {
    .gimmick { gap: 24px; }
    .marquee {
        top: clamp(-140px, -22vw, -220px);
        margin-top: clamp(12px, 3vh, 20px);
    }
}

/* <= 800px: Marquee etwas weiter runter */
@media (max-width: 800px) {
    .marquee {
        top: clamp(-120px, -18vw, -180px);
        margin-top: clamp(12px, 3vh, 30px);
    }
}

/* <= 768px: Stack-Layout, Buttons größer tappbar, Seitenleisten schlanker */
@media (max-width: 768px) {
    .hero { padding: clamp(36px, 8vh, 72px) 0 clamp(28px, 6vh, 60px); }

    .heroButtonsWrapper {
        flex-wrap: wrap;
        justify-content: center;
    }

    .heroButton_work,
    .heroButton_contact {
        min-width: 140px; /* falls das Mixin sehr breit ist */
        padding-inline: 16px;
    }

    .gimmick {
        align-items: center;
        justify-items: center;
        gap: 16px;
        margin-top: clamp(12px, 3vh, 20px);
    }

    .gimmick_left,
    .gimmick_right {
        gap: 10px;
    }

    .iconStack {
        grid-auto-columns: min-content;
        gap: 10px;
    }

    .vertBar { height: clamp(90px, 22vw, 140px); }

    .marquee {
        rotate: -6deg;
        top: calc(clamp(-120px, -18vw, -100px) + 150px);
        width: 100vw;
        max-width: 100vw;
        left: 50%;
        transform: translateX(-50%);
        padding: 8px 0;
        margin-top: clamp(12px, 3vh, 20px);
    }
}

/* <= 560px: Seitenleisten optional vereinfachen, Marquee dichter & kleiner */
@media (max-width: 560px) {
    .hero_subtitle { font-size: clamp(16px, 4.2vw, 22px); }
    .hero_title    { font-size: clamp(32px, 9vw, 56px); }

    .iconStack .iconBtn {
        width: 32px; height: 32px;
    }

    .gimmick_left,
    .gimmick_right {
        opacity: .9;
    }

    .marquee {
        font-size: clamp(16px, 4.5vw, 22px);
        top: calc(clamp(-96px, -15vw, -140px) + 150px );
        padding: 6px 0;
    }
}

/* Sehr kleine Geräte / Sicherheitsnetz */
@media (max-width: 380px) {
    .heroButtonsWrapper { gap: 10px; }
    .heroButton_work,
    .heroButton_contact { min-width: 128px; }

    .marquee {
        top: 100px;
        rotate: -2deg;
    }

    .heroButton_contact { margin-top: 0; }

    .gimmick {
        justify-content: space-between;
        gap: 120px;
    }
}

/* Touch-Geräte: kein Hover-Speedwechsel nötig */
@media (hover: none) and (pointer: coarse) {
    .marquee { --speed: 40s; } /* etwas ruhiger, aber ohne Hover-Abhängigkeit */
}
